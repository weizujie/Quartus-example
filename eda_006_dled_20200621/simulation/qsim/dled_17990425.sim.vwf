/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK48M")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dig")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dig[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dig";
}

SIGNAL("dig[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dig";
}

SIGNAL("dig[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dig";
}

SIGNAL("dig[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dig";
}

SIGNAL("dig[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dig";
}

SIGNAL("dig[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dig";
}

SIGNAL("dig[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dig";
}

SIGNAL("dig[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dig";
}

SIGNAL("seg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("seg[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

SIGNAL("seg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg";
}

TRANSITION_LIST("CLK48M")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
		}
	}
}

TRANSITION_LIST("dig[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.379;
			LEVEL 0 FOR 2002.622;
			LEVEL 1 FOR 28000.227;
			LEVEL 0 FOR 3999.773;
			LEVEL 1 FOR 28000.227;
			LEVEL 0 FOR 3999.773;
			LEVEL 1 FOR 28000.227;
			LEVEL 0 FOR 3999.773;
			LEVEL 1 FOR 1991.999;
		}
	}
}

TRANSITION_LIST("dig[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.724;
			LEVEL 1 FOR 2002.958;
			LEVEL 0 FOR 3999.869;
			LEVEL 1 FOR 28000.131;
			LEVEL 0 FOR 3999.869;
			LEVEL 1 FOR 28000.131;
			LEVEL 0 FOR 3999.869;
			LEVEL 1 FOR 28000.131;
			LEVEL 0 FOR 1991.318;
		}
	}
}

TRANSITION_LIST("dig[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.134;
			LEVEL 1 FOR 6003.1;
			LEVEL 0 FOR 3999.729;
			LEVEL 1 FOR 28000.271;
			LEVEL 0 FOR 3999.729;
			LEVEL 1 FOR 28000.271;
			LEVEL 0 FOR 3999.729;
			LEVEL 1 FOR 25992.037;
		}
	}
}

TRANSITION_LIST("dig[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.281;
			LEVEL 1 FOR 10002.91;
			LEVEL 0 FOR 3999.97;
			LEVEL 1 FOR 28000.03;
			LEVEL 0 FOR 3999.97;
			LEVEL 1 FOR 28000.03;
			LEVEL 0 FOR 3999.97;
			LEVEL 1 FOR 21991.839;
		}
	}
}

TRANSITION_LIST("dig[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.72;
			LEVEL 1 FOR 14003.435;
			LEVEL 0 FOR 3999.852;
			LEVEL 1 FOR 28000.148;
			LEVEL 0 FOR 3999.852;
			LEVEL 1 FOR 28000.148;
			LEVEL 0 FOR 3999.852;
			LEVEL 1 FOR 17991.993;
		}
	}
}

TRANSITION_LIST("dig[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.399;
			LEVEL 1 FOR 18003.427;
			LEVEL 0 FOR 3999.889;
			LEVEL 1 FOR 28000.111;
			LEVEL 0 FOR 3999.889;
			LEVEL 1 FOR 28000.111;
			LEVEL 0 FOR 3999.889;
			LEVEL 1 FOR 13992.285;
		}
	}
}

TRANSITION_LIST("dig[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.39;
			LEVEL 1 FOR 22003.534;
			LEVEL 0 FOR 3999.773;
			LEVEL 1 FOR 28000.227;
			LEVEL 0 FOR 3999.773;
			LEVEL 1 FOR 28000.227;
			LEVEL 0 FOR 3999.773;
			LEVEL 1 FOR 9992.303;
		}
	}
}

TRANSITION_LIST("dig[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.09;
			LEVEL 1 FOR 26003.553;
			LEVEL 0 FOR 3999.825;
			LEVEL 1 FOR 28000.175;
			LEVEL 0 FOR 3999.825;
			LEVEL 1 FOR 28000.175;
			LEVEL 0 FOR 3999.825;
			LEVEL 1 FOR 5991.532;
		}
	}
}

TRANSITION_LIST("seg[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 100000.0;
		}
	}
}

TRANSITION_LIST("seg[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.681;
			LEVEL 1 FOR 2002.946;
			LEVEL 0 FOR 19999.934;
			LEVEL 1 FOR 4000.066;
			LEVEL 0 FOR 3999.885;
			LEVEL 1 FOR 4000.115;
			LEVEL 0 FOR 19999.934;
			LEVEL 1 FOR 4000.066;
			LEVEL 0 FOR 3999.885;
			LEVEL 1 FOR 4000.115;
			LEVEL 0 FOR 19999.934;
			LEVEL 1 FOR 4000.066;
			LEVEL 0 FOR 3999.885;
			LEVEL 1 FOR 4000.115;
			LEVEL 0 FOR 1991.373;
		}
	}
}

TRANSITION_LIST("seg[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.782;
			LEVEL 1 FOR 10002.656;
			LEVEL 0 FOR 12000.22;
			LEVEL 1 FOR 3999.78;
			LEVEL 0 FOR 4000.159;
			LEVEL 1 FOR 11999.841;
			LEVEL 0 FOR 12000.22;
			LEVEL 1 FOR 3999.78;
			LEVEL 0 FOR 4000.159;
			LEVEL 1 FOR 11999.841;
			LEVEL 0 FOR 12000.22;
			LEVEL 1 FOR 3999.78;
			LEVEL 0 FOR 4000.159;
			LEVEL 1 FOR 5991.403;
		}
	}
}

TRANSITION_LIST("seg[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.401;
			LEVEL 1 FOR 2002.666;
			LEVEL 0 FOR 4000.114;
			LEVEL 1 FOR 11999.886;
			LEVEL 0 FOR 4000.214;
			LEVEL 1 FOR 3999.786;
			LEVEL 0 FOR 4000.214;
			LEVEL 1 FOR 3999.786;
			LEVEL 0 FOR 4000.114;
			LEVEL 1 FOR 11999.886;
			LEVEL 0 FOR 4000.214;
			LEVEL 1 FOR 3999.786;
			LEVEL 0 FOR 4000.214;
			LEVEL 1 FOR 3999.786;
			LEVEL 0 FOR 4000.114;
			LEVEL 1 FOR 11999.886;
			LEVEL 0 FOR 4000.214;
			LEVEL 1 FOR 3999.786;
			LEVEL 0 FOR 4000.214;
			LEVEL 1 FOR 3999.786;
			LEVEL 0 FOR 1991.933;
		}
	}
}

TRANSITION_LIST("seg[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.849;
			LEVEL 1 FOR 2002.775;
			LEVEL 0 FOR 8000.01;
			LEVEL 1 FOR 3999.896;
			LEVEL 0 FOR 8000.199;
			LEVEL 1 FOR 3999.895;
			LEVEL 0 FOR 4000.075;
			LEVEL 1 FOR 3999.925;
			LEVEL 0 FOR 8000.01;
			LEVEL 1 FOR 3999.896;
			LEVEL 0 FOR 8000.199;
			LEVEL 1 FOR 3999.895;
			LEVEL 0 FOR 4000.075;
			LEVEL 1 FOR 3999.925;
			LEVEL 0 FOR 8000.01;
			LEVEL 1 FOR 3999.896;
			LEVEL 0 FOR 8000.199;
			LEVEL 1 FOR 3999.895;
			LEVEL 0 FOR 4000.075;
			LEVEL 1 FOR 3999.925;
			LEVEL 0 FOR 1990.376;
		}
	}
}

TRANSITION_LIST("seg[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.724;
			LEVEL 0 FOR 2002.959;
			LEVEL 1 FOR 3999.868;
			LEVEL 0 FOR 28000.132;
			LEVEL 1 FOR 3999.868;
			LEVEL 0 FOR 28000.132;
			LEVEL 1 FOR 3999.868;
			LEVEL 0 FOR 28000.132;
			LEVEL 1 FOR 1991.317;
		}
	}
}

TRANSITION_LIST("seg[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.619;
			LEVEL 0 FOR 14003.568;
			LEVEL 1 FOR 7999.537;
			LEVEL 0 FOR 24000.463;
			LEVEL 1 FOR 7999.537;
			LEVEL 0 FOR 24000.463;
			LEVEL 1 FOR 7999.537;
			LEVEL 0 FOR 13992.276;
		}
	}
}

TRANSITION_LIST("seg[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.735;
			LEVEL 1 FOR 2002.855;
			LEVEL 0 FOR 7999.929;
			LEVEL 1 FOR 4000.003;
			LEVEL 0 FOR 16000.004;
			LEVEL 1 FOR 4000.064;
			LEVEL 0 FOR 7999.929;
			LEVEL 1 FOR 4000.003;
			LEVEL 0 FOR 16000.004;
			LEVEL 1 FOR 4000.064;
			LEVEL 0 FOR 7999.929;
			LEVEL 1 FOR 4000.003;
			LEVEL 0 FOR 16000.004;
			LEVEL 1 FOR 4000.064;
			LEVEL 0 FOR 1990.41;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK48M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dig";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "dig[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "dig[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "dig[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "dig[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "dig[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "dig[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "dig[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "dig[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "seg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "seg[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "seg[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "seg[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "seg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "seg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "seg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "seg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "seg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
